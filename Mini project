import java.time.LocalDateTime;

public class Task {
    private String name;
    private String description;
    private LocalDateTime reminderTime;

    public Task(String name, String description, LocalDateTime reminderTime) {
        this.name = name;
        this.description = description;
        this.reminderTime = reminderTime;
    }

    public String getName() {
        return name;
    }

    public String getDescription() {
        return description;
    }

    public LocalDateTime getReminderTime() {
        return reminderTime;
    }

    @Override
    public String toString() {
        return "Task: " + name + "\nDescription: " + description + "\nReminder Time: " + reminderTime;
    }
}



import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;

public class TaskManager {
    private Map<String, Task> tasks = new HashMap<>();

    public void addTask(String name, String description, LocalDateTime reminderTime) {
        Task task = new Task(name, description, reminderTime);
        tasks.put(name, task);
        startReminderThread(task);
        System.out.println("Task added: " + name);
    }

    private void startReminderThread(Task task) {
        Thread reminderThread = new Thread(() -> {
            while (true) {
                LocalDateTime now = LocalDateTime.now();
                if (now.isAfter(task.getReminderTime())) {
                    System.out.println("Reminder: " + task);
                    break;
                }
                try {
                    Thread.sleep(1000); // Check every second
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        });
        reminderThread.start();
    }
}


import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;

public class Main {
    public static void main(String[] args) {
        TaskManager taskManager = new TaskManager();

        // Adding tasks
        taskManager.addTask("Finish Assignment", "Complete the coding assignment for Java class", 
                            LocalDateTime.now().plus(1, ChronoUnit.MINUTES));
        
        taskManager.addTask("Meeting", "Project discussion meeting with team", 
                            LocalDateTime.now().plus(2, ChronoUnit.MINUTES));
    }
}
